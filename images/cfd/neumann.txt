import numpy as np
import matplotlib.pyplot as plt

l = 10.0
b = 10.0
N = 11
dx = l / (N - 1)
dy = b / (N - 1)

# Discretization of domain
x = np.zeros((N, N))
y = np.zeros((N, N))
for i in range(N):
    for j in range(N):
        x[i, j] = dx * (j)
        y[i, j] = dy * (i)

# Boundary condition
T = np.ones((N, N))
T[:, 0] = 100
T[:, -1] = 50

# Iterative solving of PDE
for ct in range(10000):
    for j in range(1, N - 1):
        for i in range(1, N - 1):
            T[i, j] = (T[i + 1, j] + T[i - 1, j] + T[i, j + 1] + T[i, j - 1]) / 4
    T[0, 1:N - 1] = T[1, 1:N - 1]
    T[N - 1, 1:N - 1] = T[N - 2, 1:N - 1]

# Plot the contour
plt.contourf(x, y, T, cmap='hot')
plt.colorbar(label='Temperature')
plt.xlabel('X')
plt.ylabel('Y')
plt.title('Temperature Contour')
plt.show()


